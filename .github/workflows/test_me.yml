name: Poetry CI
on: [push, pull_request]

jobs:
  poetry:
    runs-on: ${{ matrix.os }}
    
    strategy:
      max-parallel: 42
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.9, 3.10]

    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: | 
          poetry install --verbose --no-interaction --no-root 
          ls $HOME/work/appy/appy/ | grep ".log" | xargs cat
      
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install project
        run: poetry install --verbose --no-interaction
  
  test:
    runs-on: ${{ matrix.os }}
    needs: poetry

    strategy:
      max-parallel: 42
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.9, 3.10]

    steps:
      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest tests/
          coverage report
